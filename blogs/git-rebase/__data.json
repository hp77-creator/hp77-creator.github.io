{"type":"data","nodes":[null,{"type":"data","data":[{"post":1},{"slug":2,"title":3,"date":4,"description":5,"content":6,"visible":7,"tags":8},"git-rebase","mishap with git rebase, reflog to rescue","2024-12-10","lesson on Git and what not to do","\nI was working on one Spring boot repo. The code was mix of spaghetti from around the world and I wanted to iron out some things.\nApply SOLID principles and make it more readable for myself. I did those changes but then I realized that on this same repo there has \nbeen work done by my colleague as well.\n\nso like my habit, I simply did\n`git rebase origin main` when I was on a `feature` branch and then I saw some conflicts, I expected those since there were some changes that were in common files. I used `IntelliJ` merge editor to resolve the conflicts but then I see that my branch is changed to `main`\n\n![main-branch-pic](https://res.cloudinary.com/ddq6sqvno/image/upload/v1758413819/main-branch_ygzwj3.png)\n\nBefore observing this change, I had also done `git add` and was about to `commit`.\n\nBut now that my branch was switched to `main`, I was curious what did I do wrong and do I know rebase correctly. I searched for my mistake and observed that, when we do rebase\nwe should use\n\n`git rebase origin/main` and not `git rebase origin main`\n\nwhen you do `git rebase origin/main`\n\nYou are telling `git` to rebase your existing branch with `main` that is there in `origin`\n\nand when you do `git rebase origin main` \n\nYou are telling `git` to rebase your __main__ branch with `origin`'s `main` and it automatically switches your branch as well.\n\nTo see the history of the `HEAD` pointer of `git` to track which branch it switched to or from, you can use `git reflog`.\n\nIt will show you history of the branches and places it had originated from and had been, something like below:\n![git-reflog](https://res.cloudinary.com/ddq6sqvno/image/upload/v1758413821/git-reflog_vwuqsc.png)\n\n\n\n\n\n\n---- \n\n## References\n\n- [Git remote branches](https://git-scm.com/book/en/v2/Git-Branching-Remote-Branches)\n",true,[9,10,11],"git","debugging","tips"],"uses":{"params":["slug"]}}]}
